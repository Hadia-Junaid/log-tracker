define(['exports', 'preact/jsx-runtime', 'preact', 'preact/compat', 'preact/hooks', './BaseButton-771c5db8', './useToggleAction-59741954', './useTooltip-7b915f4c', './mergeProps-bcfa6a92', './logger-0f873e29', './LayerHost-733ade2f', 'css!./TooltipContentStyles.styles.css', 'module', './hooks/UNSAFE_useTooltip/themes/redwood/TooltipContentVariants.css', './tooltipUtils-30886397', './toggleButtonUtils-0ebe4c56', './buttonUtils-97878e90', './ToggleButtonLabel-2f0e4f18'], (function(e,t,o,s,i,l,n,a,r,c,d,g,p,u,b,T,f,h){"use strict";const m=s.forwardRef((({children:e,variant:s="outlined",size:c="md",isDisabled:d=!1,tooltip:g,accessibleLabel:p,isSelected:u=!1,onToggle:b,testId:m,"aria-describedby":y,width:B,...v},x)=>{const{globalEventProps:I}=f.processGlobals(v),w=i.useRef(null);i.useImperativeHandle(x,(()=>w.current),[w]);const{triggerProps:A}=n.useToggleAction({isDisabled:d,onToggle:b}),{tooltipContent:D,tooltipProps:P}=a.useTooltip({text:g??p,isDisabled:d}),S=T.toggleStyling("auto",u,!1,!1,"outlined"===s,void 0,void 0,!0,!0),U={"aria-describedby":y};return t.jsxs(o.Fragment,{children:[t.jsx(l.BaseButton,{...r.mergeProps(P,A,I,U),variant:s,isDisabled:d,size:c,width:B,"aria-pressed":u,styling:S,ref:w,"aria-label":p??g,testId:m,children:t.jsx(h.ToggleButtonLabel,{onAction:()=>b?.({value:u}),isDisabled:d,display:"icons",startIcon:e})}),D]})}));m.displayName="IconToggleButton",e.IconToggleButton=m}));
//# sourceMappingURL=IconToggleButton-d5112634.js.map
